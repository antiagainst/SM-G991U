/* drivers/input/sec_input/slsi/slsi_reg.h
 *
 * Copyright (C) 2015 Samsung Electronics Co., Ltd.
  *
 * Core file for Samsung TSC driver
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#define TYPE_STATUS_EVENT_CMD_DRIVEN	0
#define TYPE_STATUS_EVENT_ERR		1
#define TYPE_STATUS_EVENT_INFO		2
#define TYPE_STATUS_EVENT_USER_INPUT	3
#define TYPE_STATUS_EVENT_SPONGE_INFO	6
#define TYPE_STATUS_EVENT_VENDOR_INFO	7
#define TYPE_STATUS_CODE_SAR	0x28

#define BIT_STATUS_EVENT_CMD_DRIVEN(a)	(a << TYPE_STATUS_EVENT_CMD_DRIVEN)
#define BIT_STATUS_EVENT_ERR(a)		(a << TYPE_STATUS_EVENT_ERR)
#define BIT_STATUS_EVENT_INFO(a)	(a << TYPE_STATUS_EVENT_INFO)
#define BIT_STATUS_EVENT_USER_INPUT(a)	(a << TYPE_STATUS_EVENT_USER_INPUT)
#define BIT_STATUS_EVENT_VENDOR_INFO(a)	(a << TYPE_STATUS_EVENT_VENDOR_INFO)

#define DO_FW_CHECKSUM			(1 << 0)
#define DO_PARA_CHECKSUM		(1 << 1)

#define SLSI_TS_EVENTID_HOVER		10

/* SEC_TS READ REGISTER ADDRESS */
#define SLSI_TS_CMD_SENSE_ON			0x10
#define SLSI_TS_CMD_SENSE_OFF			0x11
#define SLSI_TS_CMD_SW_RESET			0x12
#define SLSI_TS_CMD_CALIBRATION_SEC		0x13	// send it to touch ic, but toucu ic works nothing.
#define SLSI_TS_CMD_FACTORY_PANELCALIBRATION	0x14

#define SLSI_TS_READ_GPIO_STATUS			0x20	// not support
#define SLSI_TS_READ_FIRMWARE_INTEGRITY		0x21
#define SLSI_TS_READ_DEVICE_ID			0x22
#define SLSI_TS_READ_PANEL_INFO			0x23
#define SLSI_TS_READ_CORE_CONFIG_VERSION		0x24

#define SLSI_TS_CMD_SET_TOUCHFUNCTION		0x30
#define SLSI_TS_CMD_SET_TSC_MODE			0x31
#define SET_TS_CMD_SET_CHARGER_MODE		0x32
#define SET_TS_CMD_SET_NOISE_MODE		0x33
#define SET_TS_CMD_SET_REPORT_RATE		0x34
#define SLSI_TS_CMD_TOUCH_MODE_FOR_THRESHOLD	0x35
#define SLSI_TS_CMD_TOUCH_THRESHOLD		0x36
#define SET_TS_CMD_KEY_THRESHOLD		0x37
#define SLSI_TS_CMD_SET_COVERTYPE		0x38
#define SLSI_TS_CMD_WAKEUP_GESTURE_MODE		0x39
#define SLSI_TS_WRITE_POSITION_FILTER		0x3A
#define SLSI_TS_CMD_WET_MODE			0x3B
#define SLSI_TS_CMD_JIG_MODE			0x3C
#define SLSI_TS_CMD_SET_LOW_POWER_SENSITIVITY	0x40
#define SLSI_TS_CMD_FOD_ICON			0x42
#define SLSI_TS_CMD_ERASE_FLASH			0x45
#define SLSI_TS_CMD_NOTE_MODE			0x46
#define SLSI_TS_CMD_GAME_MODE			0x47
#define SLSI_TS_READ_ID				0x52
#define SLSI_TS_READ_BOOT_STATUS			0x55
#define SLSI_TS_CMD_ENTER_FW_MODE		0x57
#define SLSI_TS_READ_EVENT			0x60
#define SLSI_TS_READ_ALL_EVENT			0x61
#define SLSI_TS_CMD_CLEAR_EVENT_STACK		0x62
#define SLSI_TS_CMD_MUTU_RAW_TYPE		0x70
#define SLSI_TS_CMD_SELF_RAW_TYPE		0x71
#define SLSI_TS_READ_TOUCH_RAWDATA		0x72
#define SLSI_TS_READ_TOUCH_SELF_RAWDATA		0x73
#define SLSI_TS_CMD_FACTORY_LEVEL		0x74
#define SLSI_TS_GET_FACTORY_DATA			0x75
#define SLSI_TS_CMD_SENSITIVITY_MODE		0x77
#define SLSI_TS_READ_SENSITIVITY_VALUE		0x78
#define SLSI_TS_SET_FACTORY_DATA_TYPE		0x7D
#define SLSI_TS_READ_PROX_INTENSITY		0x7E
#define SLSI_TS_READ_SELFTEST_RESULT		0x80
#define SLSI_TS_CMD_CALIBRATION_AMBIENT		0x81
#define SLSI_TS_CMD_P2P_TEST			0x82
#define SLSI_TS_CMD_P2P_MODE			0x83
#define SLSI_TS_CMD_NVM				0x85
#define SLSI_TS_CMD_STATEMANAGE_ON		0x8E
#define SLSI_TS_CMD_CALIBRATION_OFFSET_SDC	0x8F
#define SLSI_TS_CMD_SET_SCANRATE			0x94
#define SLSI_TS_CMD_SET_VARIABLE_REFRESH_RATE_MODE			0x97
#define SLSI_TS_CMD_DIFFERENTIAL_TEST		0x9A
//#define SLSI_TS_CMD_START_LOWPOWER_TEST	0x9B
#define SLSI_TS_CMD_LPM_AOD_OFF_ON		0x9B
#define SLSI_TS_CMD_SYNC_CHANGED			0x9C
#define SLSI_TS_CMD_SIP_MODE			0xB5
#define SET_TS_CMD_SET_LOWTEMPERATURE_MODE	0xBE
#define SET_TS_CMD_ELVSS_TEST	0xD7
#define SET_TS_CMD_SRAM_TEST			0x9D

#define SLSI_TS_CMD_LPM_AOD_OFF	0x01
#define SLSI_TS_CMD_LPM_AOD_ON	0x02

#define SLSI_TS_CMD_STATUS_EVENT_TYPE	0xA0
#define SLSI_TS_READ_FW_INFO		0xA2
#define SLSI_TS_READ_FW_VERSION		0xA3
#define SLSI_TS_READ_PARA_VERSION	0xA4
#define SLSI_TS_READ_IMG_VERSION		0xA5
#define SLSI_TS_CMD_GET_CHECKSUM		0xA6
#define SLSI_TS_CMD_DEADZONE_RANGE	0xAA
#define SLSI_TS_CMD_LONGPRESSZONE_RANGE	0xAB
#define SLSI_TS_CMD_LONGPRESS_DROP_AREA	0xAC
#define SLSI_TS_CMD_LONGPRESS_DROP_DIFF	0xAD
#define SLSI_TS_READ_TS_STATUS		0xAF
#define SLSI_TS_CMD_SELFTEST		0xAE
#define SLSI_TS_CMD_SET_GET_FACTORY_MODE	0xB2
#define SLSI_TS_CMD_INPUT_GPIO_CONTROL	0xBF

/* SEC_TS FLASH COMMAND */
#define SLSI_TS_CMD_FLASH_READ_ADDR	0xD0
#define SLSI_TS_CMD_FLASH_READ_SIZE	0xD1
#define SLSI_TS_CMD_FLASH_READ_DATA	0xD2
#define SLSI_TS_CMD_CHG_SYSMODE		0xD7
#define SLSI_TS_CMD_FLASH_ERASE		0xD8
#define SLSI_TS_CMD_FLASH_WRITE		0xD9
#define SLSI_TS_CMD_FLASH_PADDING	0xDA

#define SLSI_TS_READ_BL_UPDATE_STATUS	0xDB
#define SLSI_TS_CMD_SET_POWER_MODE	0xE4
#define SLSI_TS_CMD_EDGE_DEADZONE	0xE5
#define SLSI_TS_CMD_SET_MONITOR_NOISE_MODE	0xE7
#define SLSI_TS_CMD_SET_USER_PRESSURE		0xEB
#define SLSI_TS_CMD_SET_TEMPERATURE_COMP_MODE	0xEC
#define SLSI_TS_CMD_SET_TOUCHABLE_AREA		0xED
#define SLSI_TS_CMD_SET_BRUSH_MODE		0xEF

#define SLSI_TS_READ_CALIBRATION_REPORT		0xF1
#define SLSI_TS_CMD_SET_VENDOR_EVENT_LEVEL	0xF2
#define SLSI_TS_CMD_SET_SCAN_MODE		0xF3

#define SLSI_TS_CMD_SET_MISCAL_THD		0xA9
#define SLSI_TS_CMD_RUN_MISCAL			0xA7
#define SLSI_TS_CMD_GET_MISCAL_RESULT		0xA8

#define SLSI_TS_FLASH_SIZE_64		64
#define SLSI_TS_FLASH_SIZE_128		128
#define SLSI_TS_FLASH_SIZE_256		256

#define SLSI_TS_FLASH_SIZE_CMD		1
#define SLSI_TS_FLASH_SIZE_ADDR		2
#define SLSI_TS_FLASH_SIZE_CHECKSUM	1

#define SLSI_TS_STATUS_BOOT_MODE		0x10
#define SLSI_TS_STATUS_APP_MODE		0x20

#define SLSI_TS_FIRMWARE_PAGE_SIZE_256	256
#define SLSI_TS_FIRMWARE_PAGE_SIZE_128	128

/* SEC status event id */
#define SLSI_TS_COORDINATE_EVENT		0
#define SLSI_TS_STATUS_EVENT		1
#define SLSI_TS_GESTURE_EVENT		2
#define SLSI_TS_EMPTY_EVENT		3

#define SLSI_TS_EVENT_BUFF_SIZE		16

#define SLSI_TS_TOUCHTYPE_NORMAL		0
#define SLSI_TS_TOUCHTYPE_HOVER		1
#define SLSI_TS_TOUCHTYPE_FLIPCOVER	2
#define SLSI_TS_TOUCHTYPE_GLOVE		3
#define SLSI_TS_TOUCHTYPE_STYLUS		4
#define SLSI_TS_TOUCHTYPE_PALM		5
#define SLSI_TS_TOUCHTYPE_WET		6
#define SLSI_TS_TOUCHTYPE_PROXIMITY	7
#define SLSI_TS_TOUCHTYPE_JIG		8

/* SLSI_TS_GESTURE_TYPE */
#define SLSI_TS_GESTURE_CODE_SWIPE		0x00
#define SLSI_TS_GESTURE_CODE_DOUBLE_TAP		0x01
#define SLSI_TS_GESTURE_CODE_PRESS		0x03
#define SLSI_TS_GESTURE_CODE_SINGLE_TAP		0x04
#define SLSI_TS_GESTURE_CODE_DUMPFLUSH		0x05

/* SLSI_TS_GESTURE_ID */
#define SLSI_TS_GESTURE_ID_AOD			0x00
#define SLSI_TS_GESTURE_ID_DOUBLETAP_TO_WAKEUP	0x01

/* SEC_TS_DUMP_ID */
#define SLSI_TS_SPONGE_DUMP_0			0x00
#define SLSI_TS_SPONGE_DUMP_1			0x01

/* SLSI_TS_INFO : Info acknowledge event */
#define SLSI_TS_ACK_BOOT_COMPLETE	0x00
#define SLSI_TS_ACK_WET_MODE	0x1

/* SLSI_TS_VENDOR_INFO : Vendor acknowledge event */
#define SLSI_TS_VENDOR_ACK_OFFSET_CAL_DONE		0x40
#define SLSI_TS_VENDOR_ACK_SELF_TEST_DONE		0x41
#define SLSI_TS_VENDOR_ACK_CMR_TEST_DONE			0x42	/* mutual */
#define SLSI_TS_VENDOR_ACK_CSR_TX_TEST_DONE		0x43	/* self_tx */
#define SLSI_TS_VENDOR_ACK_CSR_RX_TEST_DONE		0x44	/* self_rx */
#define SLSI_TS_VENDOR_ACK_CMR_KEY_TEST_DONE		0x46	/* mutual_key */
#define SLSI_TS_VENDOR_ACK_RX_NODE_GAP_TEST_DONE		0x47	/* mutual_key */
#define SLSI_TS_VENDOR_ACK_ELVSS_TEST_DONE		0x48	/* ELVSS CAP */

#define SLSI_TS_VENDOR_ACK_LOWPOWER_SELF_TEST_DONE	0x58
#define SLSI_TS_VENDOR_STATE_CHANGED			0x61
#define SLSI_TS_VENDOR_ACK_NOISE_STATUS_NOTI		0x64
#define SLSI_TS_VENDOR_ACK_PRE_NOISE_STATUS_NOTI		0x6D
#define SLSI_TS_VENDOR_ACK_CHARGER_STATUS_NOTI		0x6E

/* SLSI_TS_ERROR : Error event */
#define SLSI_TS_ERR_EVNET_CORE_ERR	0x0
#define SLSI_TS_ERR_EVENT_QUEUE_FULL	0x01
#define SLSI_TS_ERR_EVENT_ESD		0x2

/* SEC_OFFSET_SIGNUTRE */
#define SEC_CM_HIST_DATA_SIZE			3 * 2 * 48	/* (CM1/2/3)*2 */
#define SEC_OFFSET_SIGNATURE			0x59525446
#define SEC_CM2_SIGNATURE			0x324D5446
#define SEC_CM3_SIGNATURE			0x334D5446
#define SEC_MISCAL_SIGNATURE			0x43534D46
#define SEC_FAIL_HIST_SIGNATURE			0x53484646

#define SLSI_TS_BIT_SETFUNC_TOUCH		(1 << 0)
#define SLSI_TS_BIT_SETFUNC_MUTUAL		(1 << 0)
#define SLSI_TS_BIT_SETFUNC_HOVER		(1 << 1)
#define SLSI_TS_BIT_SETFUNC_COVER		(1 << 2)
#define SLSI_TS_BIT_SETFUNC_GLOVE		(1 << 3)
#define SLSI_TS_BIT_SETFUNC_STYLUS		(1 << 4)
#define SLSI_TS_BIT_SETFUNC_PALM			(1 << 5)
#define SLSI_TS_BIT_SETFUNC_WET			(1 << 6)
#define SLSI_TS_BIT_SETFUNC_PROXIMITY		(1 << 7)

#define SLSI_TS_DEFAULT_ENABLE_BIT_SETFUNC	(SLSI_TS_BIT_SETFUNC_TOUCH | SLSI_TS_BIT_SETFUNC_PALM | SLSI_TS_BIT_SETFUNC_WET)

#define SLSI_TS_BIT_CHARGER_MODE_NO			(0x1 << 0)
#define SLSI_TS_BIT_CHARGER_MODE_WIRE_CHARGER		(0x1 << 1)
#define SLSI_TS_BIT_CHARGER_MODE_WIRELESS_CHARGER	(0x1 << 2)
#define SLSI_TS_BIT_CHARGER_MODE_WIRELESS_BATTERY_PACK	(0x1 << 3)

#define STATE_MANAGE_ON			1
#define STATE_MANAGE_OFF		0

#define SLSI_TS_STATUS_NOT_CALIBRATION	0x50
#define SLSI_TS_STATUS_CALIBRATION_SDC	0xA1
#define SLSI_TS_STATUS_CALIBRATION_SEC	0xA2

#define SLSI_TS_CMD_EDGE_HANDLER		0xAA
#define SLSI_TS_CMD_EDGE_AREA		0xAB
#define SLSI_TS_CMD_DEAD_ZONE		0xAC
#define SLSI_TS_CMD_LANDSCAPE_MODE	0xAD

#define SLSI_TS_SET_EAR_DETECT_MODE	0xEA
#define STATUS_EVENT_VENDOR_PROXIMITY	0x6A

#define SLSI_TS_EAR_DETECT_MODE_OFF	0
#define SLSI_TS_EAR_DETECT_MODE_MUTUAL	(1 << 0)
#define SLSI_TS_EAR_DETECT_MODE_SELF	(1 << 1)
#define SLSI_TS_EAR_DETECT_MODE_FULL	(SLSI_TS_EAR_DETECT_MODE_MUTUAL | SLSI_TS_EAR_DETECT_MODE_SELF)

enum sync_changed_data {
	SLSI_TS_SYNC_CHANGED_30_TO_60	= 1,
	SLSI_TS_SYNC_CHANGED_MAX
};

typedef enum {
	TOUCH_SYSTEM_MODE_BOOT		= 0,
	TOUCH_SYSTEM_MODE_CALIBRATION	= 1,
	TOUCH_SYSTEM_MODE_TOUCH		= 2,
	TOUCH_SYSTEM_MODE_SELFTEST	= 3,
	TOUCH_SYSTEM_MODE_FLASH		= 4,
	TOUCH_SYSTEM_MODE_LOWPOWER	= 5,
	TOUCH_SYSTEM_MODE_LISTEN
} TOUCH_SYSTEM_MODE;

typedef enum {
	TOUCH_MODE_STATE_IDLE		= 0,
	TOUCH_MODE_STATE_HOVER		= 1,
	TOUCH_MODE_STATE_TOUCH		= 2,
	TOUCH_MODE_STATE_NOISY		= 3,
	TOUCH_MODE_STATE_CAL		= 4,
	TOUCH_MODE_STATE_CAL2		= 5,
	TOUCH_MODE_STATE_WAKEUP		= 10
} TOUCH_MODE_STATE;

enum switch_system_mode {
	TO_TOUCH_MODE			= 0,
	TO_LOWPOWER_MODE		= 1,
	TO_SELFTEST_MODE		= 2,
	TO_FLASH_MODE			= 3,
};

enum {
	TYPE_RAW_DATA			= 0,	/* Total - Offset : delta data */
	TYPE_SIGNAL_DATA		= 1,	/* Signal - Filtering & Normalization */
	TYPE_AMBIENT_BASELINE		= 2,	/* Cap Baseline */
	TYPE_AMBIENT_DATA		= 3,	/* Cap Ambient */
	TYPE_REMV_BASELINE_DATA		= 4,
	TYPE_DECODED_DATA		= 5,	/* Raw */
	TYPE_REMV_AMB_DATA		= 6,	/*  TYPE_RAW_DATA - TYPE_AMBIENT_DATA */
	TYPE_OFFSET_DATA_SEC		= 19,	/* Cap Offset in SEC Manufacturing Line */
	TYPE_OFFSET_DATA_SDC		= 29,	/* Cap Offset in SDC Manufacturing Line */
	TYPE_RAW_DATA_P2P_AVG		= 30,	/* Raw p2p avg data for 50 frame */
	TYPE_RAW_DATA_P2P_DIFF		= 31,	/* Raw p2p/diff data for 50 frame */
	TYPE_RAW_DATA_NODE_GAP_Y	= 32,	/* Raw p2p gap y data for 50 frame */
	TYPE_RAWDATA_MAX,
	TYPE_INVALID_DATA		= 0xFF,	/* Invalid data type for release factory mode */
};

